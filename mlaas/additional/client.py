import requests
import json
#######Custom Function
#testData={'custom_function_object':{'request_id':'1','request_shortname':'function_1','python_function':'ml_automation.custom_functions.custom_function.DummyCustomTemplate.performOperation','arguments':{}}}
#######Data Processor:: Multiple raw files- Merging function and preprocessing function
#testData={'raw_file_paths':{'1':'/ml_worker/storage/1.csv','2':'/ml_worker/storage/2.csv'},'processed_data_file_path':'/ml_worker/storage/3.csv','data_processing_object_list':[{'data_process_id':'1','data_process_shortname':'sample Merging','python_function':'ml_automation.data_processing.custom_data_processor.DummyMergingTemplate.performMerging','additional_params':'test'},{'data_process_id':'2','data_process_shortname':'sample preprocessing','python_function':'ml_automation.data_processing.custom_data_processor.TestPreprocessingTemplate1.performPreprocessing','additional_params':'test'}]}
#######Data Processor:: Single raw file with two preprocessing functions
#testData={'raw_file_paths':{'1':'/ml_worker/storage/1.csv'},'processed_data_file_path':'/ml_worker/storage/3.csv','data_processing_object_list':[{'data_process_id':'1','data_process_shortname':'sample Merging','python_function':'ml_automation.data_processing.custom_data_processor.DummyPreprocessingTemplate.performPreprocessing','additional_params':'test'},{'data_process_id':'2','data_process_shortname':'sample preprocessing','python_function':'ml_automation.data_processing.custom_data_processor.TestPreprocessingTemplate1.performPreprocessing','additional_params':'test'}]}
#######Model Generator
#testData={'preprocessed_file_path':'/ml_worker/storage/1.csv','model_generators_object_list':[{'model_id':'1','model_shortname':'sample model1','python_function':'ml_automation.model_trainers.custom_model_trainer.TestModelTrainer.performModelTraining','additional_params':'test','target_model_file_path':'/ml_worker/storage/a.pkl'},{'model_id':'2','model_shortname':'sample model2','python_function':'ml_automation.model_trainers.custom_model_trainer.TestModelTrainer2.performModelTraining','additional_params':'test','target_model_file_path':'/ml_worker/storage/b.pkl'},{'model_id':'3','model_shortname':'sample model3','python_function':'ml_automation.model_trainers.custom_model_trainer.TestModelTrainer3.performModelTraining','additional_params':'test','target_model_file_path':'/ml_worker/storage/c.pkl'}]}
#######Model Predictor
testData={'raw_testing_file_path':'/ml_worker/storage/1.csv','preprocessed_file_path':'/ml_worker/storage/2.csv','model_predictors_object_list':[{'task_id':'1','task_shortname':'sample task','model_file_paths':{'1':'/ml_worker/storage/a.pkl'},'python_function':'ml_automation.model_predictors.custom_model_predictor.TestModelPredictor.performModelPredictions','additional_params':'test','target_file_path':'/ml_worker/storage/predout.csv'},{'task_id':'2','task_shortname':'sample task2','model_file_paths':{'1':'/ml_worker/storage/b.pkl'},'python_function':'ml_automation.model_predictors.custom_model_predictor.TestModelPredictor.performModelPredictions','additional_params':'test','target_file_path':'/ml_worker/storage/predout2.csv'}]}
response=requests.post('http://localhost:5001/mlAutomation', json=testData)
print(response.text)