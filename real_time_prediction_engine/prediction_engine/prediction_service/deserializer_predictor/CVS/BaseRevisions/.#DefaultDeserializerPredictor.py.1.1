from com.highradius.prediction_service.deserializer_predictor.context.PipelinePredictionContext import PipelinePredictionContext
from com.highradius.prediction_service.service_helper import ServiceHelper
from com.highradius.common_utils.HRCLogger import HRCLogFactory
logger=HRCLogFactory.getLog()
class DefaultDeserializerPredictor(PipelinePredictionContext):
    """
    Scikit learn Algorithms Deserializer and Predictor
    """
    def __init__(self):
        self.dataFrame=None
    def performPredictions(self,dataFrame,pipelineFilename):
        try:
            self.dataFrame = dataFrame
            predContext = PipelinePredictionContext()
            predContext.pipeLineFileName = pipelineFilename
            ServiceHelper.fetchFileviaRemoteAPI(predContext.pipeLineFileName)
            predContext.pipeline_load()
            predContext.pipeline_predictLabels(dataFrame)
            predContext.pipeline_probabilityDistribution(dataFrame)
            logger.debug("Caching: " + str(ServiceHelper.load_pipeline_cache.cache_info()))
            return predContext
        except KeyError as e:
            msg="Missing key in the model file. Please check the input features or modify the file. Prediction failed due to: "+str(type(e).__name__)+" "+str(e)
            logger.error(msg)
            raise Exception(msg)
        except ValueError as e:
            msg="Null/NAN/infinity or incompatible data. Prediction failed due to: "+str(type(e).__name__)+" "+str(e)
            logger.error(msg)
            raise Exception(msg)
        except Exception as e:
            msg="Failed to deserialize or Predict Default Pipeline Based Models: "+str(type(e).__name__)+" "+str(e)
            logger.error(msg)
            raise Exception(msg)
